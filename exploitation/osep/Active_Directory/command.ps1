Write-output ("DomainAdmin User")



Write-output ("Possible abuse right in this user context")

Get-DomainUser | Get-ObjectAcl -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} | Foreach-Object {if ($_.Identity -eq $("$env:UserDomain\$env:Username")) {$_}} | where-object{ ($_.ActiveDirectoryRights -like '*GenericAll*') -or ($_.ActiveDirectoryRights -like '*GenericWrite*') -or ($_.ActiveDirectoryRights -like '*WriteOwner*') -or ($_.ActiveDirectoryRights -like '*WriteDACL*') -or ($_.ActiveDirectoryRights -like '*AllExtendedRights*') -or ($_.ActiveDirectoryRights -like '*ForceChangePassword*') -or ($_.ActiveDirectoryRights -like '*Self*')}

Write-output ("Possible abuse right with all users ")

Get-DomainUser | Get-ObjectAcl -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} | Foreach-Object { $_ } | where-object{ ($_.ActiveDirectoryRights -like '*GenericAll*') -or ($_.ActiveDirectoryRights -like '*GenericWrite*') -or ($_.ActiveDirectoryRights -like '*WriteOwner*') -or ($_.ActiveDirectoryRights -like '*WriteDACL*') -or ($_.ActiveDirectoryRights -like '*AllExtendedRights*') -or ($_.ActiveDirectoryRights -like '*ForceChangePassword*') -or ($_.ActiveDirectoryRights -like '*Self*')}

Write-output ("Unconstrained delegation")

Get-DomainComputer -Unconstrained | select-object -property cn

Write-output ("Constrained delegation")

Get-DomainUser -TrustedToAuth | select-object -property cn
Get-DomainComputer -TrustedToAuth

Write-output ("Resource based constrained delegation")

Get-DomainComputer | Get-ObjectAcl -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} | Foreach-Object {if ($_.Identity -eq $("$env:UserDomain\$env:Username")) {$_}}
